"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/upload/page",{

/***/ "(app-pages-browser)/./src/lib/apiClient.ts":
/*!******************************!*\
  !*** ./src/lib/apiClient.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updateModelMetrics: function() { return /* binding */ updateModelMetrics; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// ✅ Define API base URL\nconst API_BASE_URL = \"http://localhost:8000/api\" || 0;\nconst apiClient = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_BASE_URL\n});\n// This interceptor will handle API errors globally\napiClient.interceptors.response.use((response)=>response, (error)=>{\n    var _error_response_data, _error_response, _error_response_data1, _error_response1;\n    console.error(\"API Error:\", error);\n    const message = ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.detail) || ((_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : (_error_response_data1 = _error_response1.data) === null || _error_response_data1 === void 0 ? void 0 : _error_response_data1.message) || error.message || \"An unexpected error occurred.\";\n    // Using a simple alert for now, but a global toast would be ideal\n    alert(\"API Error: \".concat(message));\n    return Promise.reject(error);\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiClient);\n// --------------- FUNCTION UPDATED ---------------\nconst updateModelMetrics = async (modelId, metrics)=>{\n    try {\n        const formData = new FormData();\n        formData.append(\"accuracy\", metrics.accuracy.toString());\n        formData.append(\"f1_score\", metrics.f1_score.toString());\n        formData.append(\"auc\", metrics.auc.toString());\n        // It's now just ONE API call to our new, consolidated endpoint.\n        // We use `apiClient` to ensure the interceptor is used.\n        const response = await apiClient.post(\"/models/\".concat(modelId, \"/metrics\"), formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return {\n            message: \"✅ Metrics updated and logged successfully\",\n            data: response.data\n        };\n    } catch (error) {\n        // The interceptor will show the alert. We just re-throw the error\n        // so that component-level logic (like stopping a spinner) can run.\n        console.error(\"❌ Failed to log manual metrics:\", error);\n        throw error;\n    }\n} // ----------------------------------------------\n;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvYXBpQ2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlCO0FBRXpCLHdCQUF3QjtBQUN4QixNQUFNQyxlQUFlQywyQkFBZ0MsSUFBSTtBQUV6RCxNQUFNRyxZQUFZTCw2Q0FBS0EsQ0FBQ00sTUFBTSxDQUFDO0lBQzdCQyxTQUFTTjtBQUNYO0FBRUEsbURBQW1EO0FBQ25ESSxVQUFVRyxZQUFZLENBQUNDLFFBQVEsQ0FBQ0MsR0FBRyxDQUNqQyxDQUFDRCxXQUFhQSxVQUNkLENBQUNFO1FBSUdBLHNCQUFBQSxpQkFDQUEsdUJBQUFBO0lBSkZDLFFBQVFELEtBQUssQ0FBQyxjQUFjQTtJQUU1QixNQUFNRSxVQUNKRixFQUFBQSxrQkFBQUEsTUFBTUYsUUFBUSxjQUFkRSx1Q0FBQUEsdUJBQUFBLGdCQUFnQkcsSUFBSSxjQUFwQkgsMkNBQUFBLHFCQUFzQkksTUFBTSxPQUM1QkosbUJBQUFBLE1BQU1GLFFBQVEsY0FBZEUsd0NBQUFBLHdCQUFBQSxpQkFBZ0JHLElBQUksY0FBcEJILDRDQUFBQSxzQkFBc0JFLE9BQU8sS0FDN0JGLE1BQU1FLE9BQU8sSUFDYjtJQUVGLGtFQUFrRTtJQUNsRUcsTUFBTSxjQUFzQixPQUFSSDtJQUVwQixPQUFPSSxRQUFRQyxNQUFNLENBQUNQO0FBQ3hCO0FBR0YsK0RBQWVOLFNBQVNBLEVBQUE7QUFFeEIsbURBQW1EO0FBQzVDLE1BQU1jLHFCQUFxQixPQUNoQ0MsU0FDQUM7SUFNQSxJQUFJO1FBQ0YsTUFBTUMsV0FBVyxJQUFJQztRQUNyQkQsU0FBU0UsTUFBTSxDQUFDLFlBQVlILFFBQVFJLFFBQVEsQ0FBQ0MsUUFBUTtRQUNyREosU0FBU0UsTUFBTSxDQUFDLFlBQVlILFFBQVFNLFFBQVEsQ0FBQ0QsUUFBUTtRQUNyREosU0FBU0UsTUFBTSxDQUFDLE9BQU9ILFFBQVFPLEdBQUcsQ0FBQ0YsUUFBUTtRQUUzQyxnRUFBZ0U7UUFDaEUsd0RBQXdEO1FBQ3hELE1BQU1qQixXQUFXLE1BQU1KLFVBQVV3QixJQUFJLENBQUMsV0FBbUIsT0FBUlQsU0FBUSxhQUFXRSxVQUFVO1lBQzVFUSxTQUFTO2dCQUNQLGdCQUFnQjtZQUNsQjtRQUNGO1FBRUEsT0FBTztZQUFFakIsU0FBUztZQUE2Q0MsTUFBTUwsU0FBU0ssSUFBSTtRQUFDO0lBQ3JGLEVBQUUsT0FBT0gsT0FBTztRQUNkLGtFQUFrRTtRQUNsRSxtRUFBbUU7UUFDbkVDLFFBQVFELEtBQUssQ0FBQyxtQ0FBbUNBO1FBQ2pELE1BQU1BO0lBQ1I7QUFDRixFQUNBLGlEQUFpRDtDQURoRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL2FwaUNsaWVudC50cz9hOGUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcydcclxuXHJcbi8vIOKchSBEZWZpbmUgQVBJIGJhc2UgVVJMXHJcbmNvbnN0IEFQSV9CQVNFX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9CQVNFIHx8ICdodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpJ1xyXG5cclxuY29uc3QgYXBpQ2xpZW50ID0gYXhpb3MuY3JlYXRlKHtcclxuICBiYXNlVVJMOiBBUElfQkFTRV9VUkwsXHJcbn0pXHJcblxyXG4vLyBUaGlzIGludGVyY2VwdG9yIHdpbGwgaGFuZGxlIEFQSSBlcnJvcnMgZ2xvYmFsbHlcclxuYXBpQ2xpZW50LmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoXHJcbiAgKHJlc3BvbnNlKSA9PiByZXNwb25zZSwgLy8gRGlyZWN0bHkgcmV0dXJuIHN1Y2Nlc3NmdWwgcmVzcG9uc2VzXHJcbiAgKGVycm9yKSA9PiB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdBUEkgRXJyb3I6JywgZXJyb3IpO1xyXG5cclxuICAgIGNvbnN0IG1lc3NhZ2UgPVxyXG4gICAgICBlcnJvci5yZXNwb25zZT8uZGF0YT8uZGV0YWlsIHx8XHJcbiAgICAgIGVycm9yLnJlc3BvbnNlPy5kYXRhPy5tZXNzYWdlIHx8XHJcbiAgICAgIGVycm9yLm1lc3NhZ2UgfHxcclxuICAgICAgJ0FuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQuJztcclxuICAgIFxyXG4gICAgLy8gVXNpbmcgYSBzaW1wbGUgYWxlcnQgZm9yIG5vdywgYnV0IGEgZ2xvYmFsIHRvYXN0IHdvdWxkIGJlIGlkZWFsXHJcbiAgICBhbGVydChgQVBJIEVycm9yOiAke21lc3NhZ2V9YCk7XHJcblxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcclxuICB9XHJcbik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhcGlDbGllbnRcclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLSBGVU5DVElPTiBVUERBVEVEIC0tLS0tLS0tLS0tLS0tLVxyXG5leHBvcnQgY29uc3QgdXBkYXRlTW9kZWxNZXRyaWNzID0gYXN5bmMgKFxyXG4gIG1vZGVsSWQ6IG51bWJlcixcclxuICBtZXRyaWNzOiB7XHJcbiAgICBhY2N1cmFjeTogbnVtYmVyLFxyXG4gICAgZjFfc2NvcmU6IG51bWJlcixcclxuICAgIGF1YzogbnVtYmVyXHJcbiAgfVxyXG4pID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKVxyXG4gICAgZm9ybURhdGEuYXBwZW5kKCdhY2N1cmFjeScsIG1ldHJpY3MuYWNjdXJhY3kudG9TdHJpbmcoKSlcclxuICAgIGZvcm1EYXRhLmFwcGVuZCgnZjFfc2NvcmUnLCBtZXRyaWNzLmYxX3Njb3JlLnRvU3RyaW5nKCkpXHJcbiAgICBmb3JtRGF0YS5hcHBlbmQoJ2F1YycsIG1ldHJpY3MuYXVjLnRvU3RyaW5nKCkpXHJcblxyXG4gICAgLy8gSXQncyBub3cganVzdCBPTkUgQVBJIGNhbGwgdG8gb3VyIG5ldywgY29uc29saWRhdGVkIGVuZHBvaW50LlxyXG4gICAgLy8gV2UgdXNlIGBhcGlDbGllbnRgIHRvIGVuc3VyZSB0aGUgaW50ZXJjZXB0b3IgaXMgdXNlZC5cclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpQ2xpZW50LnBvc3QoYC9tb2RlbHMvJHttb2RlbElkfS9tZXRyaWNzYCwgZm9ybURhdGEsIHtcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScsXHJcbiAgICAgIH0sXHJcbiAgICB9KVxyXG5cclxuICAgIHJldHVybiB7IG1lc3NhZ2U6IFwi4pyFIE1ldHJpY3MgdXBkYXRlZCBhbmQgbG9nZ2VkIHN1Y2Nlc3NmdWxseVwiLCBkYXRhOiByZXNwb25zZS5kYXRhIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgLy8gVGhlIGludGVyY2VwdG9yIHdpbGwgc2hvdyB0aGUgYWxlcnQuIFdlIGp1c3QgcmUtdGhyb3cgdGhlIGVycm9yXHJcbiAgICAvLyBzbyB0aGF0IGNvbXBvbmVudC1sZXZlbCBsb2dpYyAobGlrZSBzdG9wcGluZyBhIHNwaW5uZXIpIGNhbiBydW4uXHJcbiAgICBjb25zb2xlLmVycm9yKCfinYwgRmFpbGVkIHRvIGxvZyBtYW51YWwgbWV0cmljczonLCBlcnJvcilcclxuICAgIHRocm93IGVycm9yXHJcbiAgfVxyXG59XHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iXSwibmFtZXMiOlsiYXhpb3MiLCJBUElfQkFTRV9VUkwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX0JBU0UiLCJhcGlDbGllbnQiLCJjcmVhdGUiLCJiYXNlVVJMIiwiaW50ZXJjZXB0b3JzIiwicmVzcG9uc2UiLCJ1c2UiLCJlcnJvciIsImNvbnNvbGUiLCJtZXNzYWdlIiwiZGF0YSIsImRldGFpbCIsImFsZXJ0IiwiUHJvbWlzZSIsInJlamVjdCIsInVwZGF0ZU1vZGVsTWV0cmljcyIsIm1vZGVsSWQiLCJtZXRyaWNzIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsImFjY3VyYWN5IiwidG9TdHJpbmciLCJmMV9zY29yZSIsImF1YyIsInBvc3QiLCJoZWFkZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/apiClient.ts\n"));

/***/ })

});